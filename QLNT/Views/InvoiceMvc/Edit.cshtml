@model QLNT.Models.Invoice
@using QLNT.Models

@{
    ViewData["Title"] = "Chỉnh sửa hóa đơn";
}

<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <form asp-action="Edit" id="invoiceForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <!-- Các trường ẩn -->
                <input type="hidden" asp-for="InvoiceId" />
                <input type="hidden" asp-for="InvoiceNumber" />
                <input type="hidden" asp-for="InvoiceType" />
                <input type="hidden" asp-for="Status" />
                <input type="hidden" asp-for="RentAmount" id="RentAmount" />
                <input type="hidden" asp-for="ServiceAmount" id="ServiceAmount" />
                <input type="hidden" asp-for="TotalAmount" id="TotalAmount" />
                <input type="hidden" asp-for="Discount" id="Discount" />
                <input type="hidden" id="ContractData" name="ContractData" />

                <h4 class="text-success mb-4">1. THÔNG TIN CHUNG</h4>
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Tòa nhà <span class="text-danger">*</span></label>
                            <select id="BuildingId" name="BuildingId" class="form-select" required>
                                <option value="">-- Chọn tòa nhà --</option>
                                @foreach (var building in ViewBag.Buildings)
                                {
                                    <option value="@building.Id" selected="@(building.Id == Model.Contract?.Room?.BuildingId)">
                                        @building.Name
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Phòng <span class="text-danger">*</span></label>
                            <select id="RoomId" name="RoomId" class="form-select" required>
                                <option value="">-- Chọn phòng --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Hợp đồng <span class="text-danger">*</span></label>
                            <select asp-for="ContractId" id="ContractId" class="form-select" required>
                                <option value="">-- Chọn hợp đồng --</option>
                            </select>
                            <span asp-validation-for="ContractId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Kỳ thanh toán <span class="text-danger">*</span></label>
                            <input asp-for="PaymentCycle" id="PaymentCycle" class="form-control" required />
                            <span asp-validation-for="PaymentCycle" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Ngày lập <span class="text-danger">*</span></label>
                            <input asp-for="IssueDate" type="date" class="form-control" required />
                            <span asp-validation-for="IssueDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Hạn thanh toán <span class="text-danger">*</span></label>
                            <input asp-for="DueDate" type="date" class="form-control" required />
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <h4 class="text-success mb-4">2. DỊCH VỤ & PHÍ</h4>
                <div class="table-responsive mb-4">
                    <table class="table table-bordered" id="servicesTable">
                        <thead class="table-light">
                            <tr>
                                <th>Dịch vụ</th>
                                <th>Đơn giá</th>
                                <th>Chỉ số</th>
                                <th style="width: 120px;">Số lượng/Số ngày</th>
                                <th>Từ ngày</th>
                                <th>Đến ngày</th>
                                <th>Thành tiền</th>
                                <th style="width: 40px;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.InvoiceDetails != null && Model.InvoiceDetails.Any())
                            {
                                foreach (var detail in Model.InvoiceDetails)
                                {
                                    <tr data-service-id="@detail.ServiceId">
                                        <td>@detail.Service?.ServiceName</td>
                                        <td class="text-end">@detail.UnitPrice.ToString("N0") đ/@detail.Service?.Unit</td>
                                        <td>
                                            @if (detail.Service?.ServiceType == ServiceTypes.Electric || detail.Service?.ServiceType == ServiceTypes.Water)
                                            {
                                                <select class="form-select meter-reading" data-service-type="@detail.Service.ServiceType">
                                                    <option value="">-- Chọn chỉ số --</option>
                                                    @if (detail.MeterLogId.HasValue)
                                                    {
                                                        <option value="@detail.MeterLogId" 
                                                            data-old-reading="@detail.OldReading"
                                                            data-new-reading="@detail.NewReading"
                                                            data-consumption="@detail.Quantity"
                                                            data-reading-date="@detail.StartDate?.ToString("yyyy-MM-dd")"
                                                            selected>
                                                            @($"{detail.MeterName} - {detail.Month}: {detail.OldReading} -> {detail.NewReading} ({detail.Quantity})")
                                                        </option>
                                                    }
                                                </select>
                                            }
                                            else
                                            {
                                                <input type="text" class="form-control" readonly />
                                            }
                                        </td>
                                        <td>
                                            <input type="number" class="form-control quantity" value="@detail.Quantity" @(detail.Service?.ServiceType == ServiceTypes.Electric || detail.Service?.ServiceType == ServiceTypes.Water ? "readonly" : "") />
                                        </td>
                                        <td><input type="date" class="form-control from-date" value="@(detail.StartDate?.ToString("yyyy-MM-dd"))" /></td>
                                        <td><input type="date" class="form-control to-date" value="@(detail.EndDate?.ToString("yyyy-MM-dd"))" /></td>
                                        <td class="text-end">
                                            <span class="amount">@detail.Amount.ToString("N0") đ</span>
                                            <input type="hidden" class="amount-value" value="@detail.Amount" />
                                        </td>
                                        <td class="text-center">
                                            <button type="button" class="btn btn-danger btn-sm remove-service">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr class="text-center">
                                    <td colspan="8" class="text-muted py-4">Không có bản ghi nào!</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mb-4">
                    <button type="button" class="btn btn-success" id="openServiceModal">
                        <i class="fas fa-plus"></i> Thêm dịch vụ
                    </button>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Ghi chú</label>
                            <textarea asp-for="Notes" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="form-group mb-2">
                                    <label>Tiền thuê:</label>
                                    <input type="text" class="form-control text-end" id="rentAmount" readonly value="@string.Format("{0:N0} đ", Model.RentAmount)" />
                                </div>
                                <div class="form-group mb-2">
                                    <label>Tiền dịch vụ:</label>
                                    <input type="text" class="form-control text-end" id="serviceAmount" readonly value="@string.Format("{0:N0} đ", Model.ServiceAmount)" />
                                </div>
                                <div class="form-group mb-2">
                                    <label>Giảm giá:</label>
                                    <input type="number" class="form-control text-end" id="discount" value="@Model.Discount" />
                                </div>
                                <div class="form-group">
                                    <label>Tổng cộng:</label>
                                    <input type="text" class="form-control text-end" id="total" readonly value="@Model.TotalAmount.ToString("N0") đ" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="text-end mt-4">
                    <a asp-action="Index" class="btn btn-secondary">Hủy</a>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Chọn Dịch Vụ -->
<div class="modal fade" id="serviceModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chọn Dịch Vụ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover" id="serviceSelectionTable">
                        <thead>
                            <tr>
                                <th style="width: 40px;">
                                    <input type="checkbox" class="form-check-input" id="selectAllServices" />
                                </th>
                                <th>Mã dịch vụ</th>
                                <th>Tên dịch vụ</th>
                                <th>Loại phí</th>
                                <th>Đơn giá</th>
                                <th>Đơn vị</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var service in ViewBag.Services)
                            {
                                <tr data-service-id="@service.Id" 
                                    data-service-code="@service.ServiceCode"
                                    data-service-name="@service.ServiceName"
                                    data-price="@service.Price"
                                    data-unit="@service.Unit">
                                    <td>
                                        <input type="checkbox" class="form-check-input service-checkbox" />
                                    </td>
                                    <td>@service.ServiceCode</td>
                                    <td>@service.ServiceName</td>
                                    <td>@service.ServiceType</td>
                                    <td class="text-end">@service.Price.ToString("N0") đ</td>
                                    <td>@service.Unit</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="addSelectedServices">Thêm dịch vụ</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function isUtilityService(serviceType) {
            return serviceType === 'Electric' || serviceType === 'Water';
        }

        $(document).ready(function () {
            // Xử lý khi submit form
            $('#invoiceForm').submit(function(e) {
                e.preventDefault();
                
                // Thêm log kiểm tra ContractId
                var contractId = $('#ContractId').val();
                console.log('ContractId trước khi submit:', contractId);
                console.log('ContractData trước khi submit:', $('#ContractData').val());
                
                // Kiểm tra các trường bắt buộc
                if (!contractId) {
                    alert('Vui lòng chọn hợp đồng');
                    return false;
                }

                // Kiểm tra thông tin hợp đồng
                var contractData = $('#ContractData').val();
                if (!contractData) {
                    alert('Vui lòng chọn hợp đồng');
                    return false;
                }

                // Kiểm tra số lượng dịch vụ đã thêm
                var serviceRows = $('#servicesTable tbody tr').filter(function() {
                    return !$(this).find('td[colspan]').length;
                });
                
                if (serviceRows.length === 0) {
                    alert('Vui lòng thêm ít nhất một dịch vụ');
                    return false;
                }
                
                // Lấy dữ liệu từ bảng dịch vụ
                var invoiceDetails = [];
                $('#servicesTable tbody tr').each(function() {
                    var row = $(this);
                    if (!row.find('td[colspan="8"]').length) {
                        var serviceId = row.data('service-id');
                        console.log('ServiceId của dòng:', serviceId);
                        console.log('Dữ liệu của dòng:', row.data());
                        
                        var detail = {
                            ServiceId: serviceId,
                            ItemName: row.find('td:eq(0)').text(),
                            UnitPrice: parseFloat(row.find('td:eq(1)').text().replace(/[^0-9.-]+/g, '')),
                            Unit: row.find('td:eq(5)').text(),
                            Quantity: parseFloat(row.find('.quantity').val()) || 0,
                            Amount: parseFloat(row.find('.amount-value').val()) || 0,
                            StartDate: row.find('.from-date').val(),
                            EndDate: row.find('.to-date').val(),
                            Notes: ""
                        };
                        console.log('Chi tiết dịch vụ:', detail);
                        invoiceDetails.push(detail);
                    }
                });

                // Cập nhật các trường ẩn
                $('#RentAmount').val(parseFloat($('#rentAmount').val().replace(/[^0-9.-]+/g, '')) || 0);
                $('#ServiceAmount').val(parseFloat($('#serviceAmount').val().replace(/[^0-9.-]+/g, '')) || 0);
                $('#TotalAmount').val(parseFloat($('#total').val().replace(/[^0-9.-]+/g, '')) || 0);
                $('#Discount').val(parseFloat($('#discount').val()) || 0);

                // Thêm dữ liệu vào form
                var formData = $(this).serializeArray();
                formData.push({ name: 'InvoiceDetails', value: JSON.stringify(invoiceDetails) });
                formData.push({ name: 'ContractData', value: contractData });

                // Log dữ liệu trước khi gửi
                console.log('Dữ liệu gửi đi:', formData);
                console.log('InvoiceDetails:', JSON.stringify(invoiceDetails));
                console.log('ContractData:', contractData);

                // Submit form
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    beforeSend: function() {
                        console.log('Bắt đầu gửi dữ liệu');
                    },
                    success: function(response) {
                        console.log('Phản hồi từ server:', response);
                        if (response.success) {
                            window.location.href = response.redirectUrl;
                        } else {
                            var errorMessage = response.message;
                            if (response.errors && response.errors.length > 0) {
                                errorMessage += '\n' + response.errors.join('\n');
                            }
                            alert(errorMessage);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Lỗi khi gọi API:', error);
                        console.error('Chi tiết lỗi:', xhr.responseText);
                        alert('Có lỗi xảy ra khi gửi dữ liệu. Vui lòng thử lại sau.');
                    }
                });
            });

            // Xử lý khi chọn tòa nhà
            $('#BuildingId').change(function () {
                var buildingId = $(this).val();
                var $roomSelect = $('#RoomId');
                var $contractSelect = $('#ContractId');
                
                // Reset các dropdown phụ thuộc
                $roomSelect.empty().append('<option value="">-- Chọn phòng --</option>');
                $contractSelect.empty().append('<option value="">-- Chọn hợp đồng --</option>');
                
                if (buildingId) {
                    $.get("/InvoiceMvc/GetRoomsByBuilding", { buildingId: buildingId }, function(data) {
                        if (data && data.length > 0) {
                            $.each(data, function(index, item) {
                                $roomSelect.append('<option value="' + item.id + '">' + item.name + '</option>');
                            });
                        } else {
                            $roomSelect.append('<option value="" disabled>Không có phòng nào trong tòa nhà này</option>');
                        }
                    }).fail(function() {
                        $roomSelect.append('<option value="" disabled>Không thể tải danh sách phòng</option>');
                        toastr.error("Không thể tải danh sách phòng");
                    });
                }
            });

            // Xử lý khi chọn phòng
            $('#RoomId').change(function () {
                var roomId = $(this).val();
                var $contractSelect = $('#ContractId');
                
                console.log('Đã chọn RoomId:', roomId);
                
                // Reset dropdown hợp đồng
                $contractSelect.empty().append('<option value="">-- Chọn hợp đồng --</option>');
                
                if (roomId) {
                    $.get("/InvoiceMvc/GetContractsByRoom", { roomId: roomId }, function(data) {
                        console.log('Danh sách hợp đồng nhận được:', data);
                        if (data && data.length > 0) {
                            $.each(data, function(index, item) {
                                console.log('Thêm hợp đồng vào dropdown:', item);
                                var option = $('<option></option>')
                                    .attr('value', item.id)
                                    .text(item.contractNumber + ' - ' + item.customerName);
                                console.log('Option được tạo:', option.val(), option.text());
                                $contractSelect.append(option);
                            });
                            
                            // Tự động chọn hợp đồng hiện tại nếu có
                            var currentContractId = '@Model.ContractId';
                            if (currentContractId) {
                                $contractSelect.val(currentContractId).trigger('change');
                            }
                        } else {
                            $contractSelect.append('<option value="" disabled>Không có hợp đồng nào cho phòng này</option>');
                        }
                    }).fail(function(xhr, status, error) {
                        console.error('Lỗi khi lấy danh sách hợp đồng:', error);
                        $contractSelect.append('<option value="" disabled>Không thể tải danh sách hợp đồng</option>');
                        toastr.error("Không thể tải danh sách hợp đồng");
                    });

                    // Load chỉ số công tơ cho các dịch vụ đã có
                    loadExistingMeterReadings();
                }
            });

            // Xử lý khi chọn hợp đồng
            $('#ContractId').change(function () {
                var contractId = parseInt($(this).val()) || 0;
                console.log('Giá trị gốc của ContractId:', $(this).val());
                console.log('Giá trị sau khi parse:', contractId);
                
                if (!contractId || contractId <= 0) {
                    console.log('ContractId không hợp lệ');
                    $('#ContractData').val('');
                    $('#PaymentCycle').val('');
                    $('#rentAmount').val('0');
                    $('#RentAmount').val('0');
                    calculateTotal();
                    return;
                }

                // Lấy thông tin hợp đồng đầy đủ
                console.log('Gọi API với contractId:', contractId);
                $.ajax({
                    url: '/InvoiceMvc/GetContractInfo/' + contractId,
                    method: 'GET',
                    success: function(contract) {
                        console.log('Kết quả từ API:', contract);
                        if (contract) {
                            // Lưu thông tin hợp đồng vào trường ẩn
                            $('#ContractData').val(JSON.stringify(contract));
                            
                            // Cập nhật PaymentCycle từ hợp đồng
                            if (contract.paymentCycle) {
                                $('#PaymentCycle').val(contract.paymentCycle);
                            }

                            // Cập nhật tiền thuê
                            $('#rentAmount').val(contract.rentalPrice.toLocaleString('vi-VN') + ' đ');
                            $('#RentAmount').val(contract.rentalPrice);
                            calculateTotal();
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Lỗi khi gọi API:', error);
                    }
                });
            });

            // Xử lý modal dịch vụ
            $('#openServiceModal').click(function() {
                $('#serviceModal').modal('show');
            });

            // Xử lý checkbox "Chọn tất cả"
            $('#selectAllServices').change(function() {
                $('.service-checkbox').prop('checked', $(this).prop('checked'));
            });

            // Load chỉ số công tơ cho các dịch vụ đã có
            function loadExistingMeterReadings() {
                $('#servicesTable tbody tr').each(function() {
                    var row = $(this);
                    var serviceType = row.find('.meter-reading').data('service-type');
                    var roomId = $('#RoomId').val();
                    
                    if (isUtilityService(serviceType) && roomId) {
                        var select = row.find('.meter-reading');
                        loadMeterReadings(roomId, serviceType, select);
                    }
                });
            }

            // Xử lý khi chọn chỉ số công tơ
            $(document).on('change', '.meter-reading', function() {
                var row = $(this).closest('tr');
                var selectedOption = $(this).find('option:selected');
                var consumption = parseFloat(selectedOption.data('consumption')) || 0;
                var price = parseFloat(row.find('td:eq(1)').text().replace(/[^0-9.-]+/g, ''));
                
                // Cập nhật số lượng và thành tiền
                row.find('.quantity').val(consumption);
                var amount = price * consumption;
                row.find('.amount').text(amount.toLocaleString('vi-VN') + ' đ');
                row.find('.amount-value').val(amount);
                calculateTotal();
            });

            // Cập nhật xử lý thêm dịch vụ
            $('#addSelectedServices').click(function() {
                var hasNewService = false;
                var roomId = $('#RoomId').val();
                
                $('.service-checkbox:checked').each(function() {
                    var row = $(this).closest('tr');
                    var serviceId = row.data('service-id');
                    var serviceCode = row.data('service-code');
                    var serviceName = row.data('service-name');
                    var price = row.data('price');
                    var unit = row.data('unit');
                    var serviceType = row.find('td:eq(3)').text(); // Lấy loại dịch vụ từ cột ServiceType

                    if ($('#servicesTable tbody').find(`tr[data-service-id="${serviceId}"]`).length === 0) {
                        hasNewService = true;
                        var newRow = `
                            <tr data-service-id="${serviceId}">
                                <td>${serviceName}</td>
                                <td class="text-end">${price.toLocaleString('vi-VN')} đ/${unit}</td>
                                <td>
                                    ${isUtilityService(serviceType) ? 
                                        `<select class="form-select meter-reading" data-service-type="${serviceType}">
                                            <option value="">-- Chọn chỉ số --</option>
                                         </select>` 
                                        : 
                                        '<input type="text" class="form-control" readonly />'}
                                </td>
                                <td>
                                    ${isUtilityService(serviceType) ?
                                        '<input type="number" class="form-control quantity" readonly />' :
                                        '<input type="number" class="form-control quantity" value="1" />'}
                                </td>
                                <td><input type="date" class="form-control from-date" /></td>
                                <td><input type="date" class="form-control to-date" /></td>
                                <td class="text-end">
                                    <span class="amount">${price.toLocaleString('vi-VN')} đ</span>
                                    <input type="hidden" class="amount-value" value="${price}" />
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-danger btn-sm remove-service">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        `;
                        
                        console.log('Dữ liệu dịch vụ trước khi thêm:', {
                            serviceId: serviceId,
                            serviceName: serviceName,
                            price: price,
                            unit: unit,
                            serviceType: serviceType
                        });
                        
                        if ($('#servicesTable tbody tr td[colspan="8"]').length > 0) {
                            $('#servicesTable tbody').empty();
                        }
                        
                        $('#servicesTable tbody').append(newRow);
                        console.log('Dữ liệu dòng sau khi thêm:', $('#servicesTable tbody tr:last').data());

                        // Load chỉ số công tơ nếu là dịch vụ điện/nước và đã chọn phòng
                        if (isUtilityService(serviceType) && roomId) {
                            var select = $(`#servicesTable tbody tr[data-service-id="${serviceId}"] .meter-reading`);
                            loadMeterReadings(roomId, serviceType, select);
                        }
                    }
                });

                $('.service-checkbox').prop('checked', false);
                $('#selectAllServices').prop('checked', false);
                $('#serviceModal').modal('hide');

                if (hasNewService) {
                    calculateTotal();
                }
            });

            // Tính thành tiền cho từng dòng
            $(document).on('change', '.quantity', function() {
                var row = $(this).closest('tr');
                var price = parseFloat(row.find('td:eq(1)').text().replace(/[^0-9.-]+/g, ''));
                var quantity = parseFloat($(this).val()) || 0;
                var amount = price * quantity;
                
                row.find('.amount').text(amount.toLocaleString('vi-VN') + ' đ');
                row.find('.amount-value').val(amount);
                calculateTotal();
            });

            // Xóa dịch vụ
            $(document).on('click', '.remove-service', function() {
                var tbody = $('#servicesTable tbody');
                $(this).closest('tr').remove();
                
                // Kiểm tra nếu không còn dòng nào thì hiển thị "Không có bản ghi nào!"
                if (tbody.find('tr').length === 0) {
                    tbody.html('<tr class="text-center"><td colspan="8" class="text-muted py-4">Không có bản ghi nào!</td></tr>');
                }
                
                calculateTotal();
            });

            // Tính tổng tiền
            function calculateTotal() {
                var rentAmount = parseFloat($('#rentAmount').val().replace(/[^0-9.-]+/g, '')) || 0;
                var serviceAmount = 0;
                $('.amount-value').each(function() {
                    serviceAmount += parseFloat($(this).val()) || 0;
                });
                
                var discount = parseFloat($('#discount').val()) || 0;
                var total = rentAmount + serviceAmount - discount;

                $('#serviceAmount').val(serviceAmount.toLocaleString('vi-VN') + ' đ');
                $('#ServiceAmount').val(serviceAmount);
                $('#total').val(total.toLocaleString('vi-VN') + ' đ');
            }

            // Xử lý khi thay đổi giảm giá
            $('#discount').on('change', calculateTotal);

            // Load dữ liệu ban đầu
            var buildingId = $('#BuildingId').val();
            if (buildingId) {
                $('#BuildingId').trigger('change');
                
                // Sau khi load phòng, chọn phòng hiện tại
                setTimeout(function() {
                    var roomId = '@Model.Contract?.RoomId';
                    if (roomId) {
                        $('#RoomId').val(roomId).trigger('change');
                        
                        // Sau khi load hợp đồng, chọn hợp đồng hiện tại
                        setTimeout(function() {
                            var contractId = '@Model.ContractId';
                            if (contractId) {
                                $('#ContractId').val(contractId).trigger('change');
                            }
                        }, 500);
                    }
                }, 500);
            }
        });
    </script>
}
